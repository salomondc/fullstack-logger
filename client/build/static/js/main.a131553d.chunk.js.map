{"version":3,"sources":["comps/LogDisplay.js","comps/LogForm.js","App.js","index.js"],"names":["LogDisplay","logs","className","length","map","l","i","new","description","startAt","endAt","LogForm","useState","loading","setLoading","log","setLog","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","json","error","code","routine","slice","color","id","action","onChange","data","target","value","rows","placeholder","type","min","App","view","toggleView","setLogs","logCreateDates","Date","logFormatDates","toLocaleString","editDiffObjById","a","b","func","diff","filter","x","some","y","concat","useEffect","res","sort","update","getLogs","style","minHeight","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a131553d.chunk.js","sourcesContent":["const LogDisplay = ({ logs }) => {\r\n\r\n\r\n  return (\r\n    <ul className=\"showLogs\">\r\n      <p className=\"logNumber\">- {logs.length} -</p>\r\n      {logs && logs[0] ? logs.map((l, i)=> \r\n        <li className={l.new === true ? 'new' : ''} key={`log_entry_${i}`}>\r\n          <b className=\"description\">{l.description}</b>\r\n          <data className=\"dates\">S: {l.startAt}<br />E: {l.endAt}</data>\r\n        </li>):\r\n        <center>\r\n        <p>\r\n          <code>No entries yet...</code>\r\n        </p>\r\n        </center>\r\n      }\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default LogDisplay;","import { useState } from 'react';\r\n\r\nconst LogForm = () => {\r\n  const [loading, setLoading] = useState('');\r\n  const [log, setLog] = useState({\r\n    description: '',\r\n    startAt: null,\r\n    endAt: null,\r\n  })\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n      setLoading('...');\r\n      fetch(`/log/create`,{\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(log),\r\n      })\r\n      .then(r => r.json())\r\n      .then(r => r.error ? \r\n      setLoading(\r\n        <em>\r\n          There was a problem uploading your data | code: {r.code}\r\n          <br/>\r\n          \"{r.routine}\"\r\n        </em>) \r\n      : \r\n      setLoading(\r\n        <>\r\n          '{r.description.slice(0, 20)}...' \r\n          Was uploaded <font color=\"#AFB\">succesfully!</font>\r\n        </>));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"loading\">\r\n        {loading}\r\n      </div>\r\n      <form onSubmit={handleSubmit} id=\"logEntry\" action=\"POST\">\r\n        <label>Log Description</label>\r\n        <textarea onChange={(e) => setLog(data => ({...data, description: e.target.value}))} rows=\"1\" placeholder=\"Put your description here...\"/>\r\n\r\n        <label>Start Date</label>\r\n        <input onChange={(e) => setLog(data => ({...data, startAt: e.target.value}))} type=\"datetime-local\"/>\r\n\r\n        <label>End Date</label>\r\n        <input onChange={(e) => setLog(data => ({...data, endAt: e.target.value}))} min={log.startAt} type=\"datetime-local\"/>\r\n        \r\n        <input className=\"clickable\" type=\"submit\" value=\"SUBMIT\"/>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n \r\nexport default LogForm;","import { useEffect, useState } from 'react';\nimport LogDisplay from './comps/LogDisplay'\nimport LogForm from './comps/LogForm'\nimport './App.css';\n\nfunction App() {\n  const [view, toggleView] = useState(true);\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState('');\n\n  const logCreateDates = (log) => \n  ({\n    ...log, \n    startAt: new Date(log.startAt), \n    endAt: new Date(log.endAt)\n  })\n\n  const logFormatDates = (log) =>\n  ({\n    ...log, \n    startAt: log.startAt.toLocaleString(), \n    endAt: log.endAt.toLocaleString()\n  })\n  const editDiffObjById = (a, b, func) => {\n    let diff = a.filter(x => !b.some(y => x.id === y.id));\n    const edited = diff.length ? b.concat(func(diff)) : a;\n    return(edited);\n  }\n  \n  useEffect(() => {\n    const getLogs = async () => {\n        setLoading('...');\n        fetch(`/logs`, { headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }}\n        )\n        .then(res => res.json())        \n        .then(json => json\n        .map(log => logCreateDates(log))\n        .sort((a, b) => b.startAt - a.startAt)\n        .map(log => logFormatDates(log)))\n        .then(update => {\n          setLoading(\n          <cite>\n            Up to date\n            <br/>\n            {update.length - logs.length !== 0 ?  \n            <span>New entries: <font color=\"#AFB\">[{update.length - logs.length}]</font>!</span> \n            : \n            <font color=\"#AAA\">No new entries</font>}</cite>)\n          const isNew = editDiffObjById(update, logs, (x) => x.map(y => ({...y, new: true})));\n          return(isNew);\n        })\n        .then(logs => setLogs(logs));\n    }\n    getLogs();\n    // eslint-disable-next-line\n  }, [view]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        {view && \n        <div className=\"loading\">\n          {loading}\n        </div>}\n        {view ?\n          <>\n            <ul className=\"showLogs head\">\n              <li>\n                <b>Description</b><br/>\n                <data className='dates' style={{minHeight: \"max-content\"}}>Start Date<br/>End Date</data>\n              </li>\n            </ul>\n            <LogDisplay logs={logs}/>\n          </>\n           :\n          <LogForm/>\n        }\n        <button className=\"clickable\" onClick={() => toggleView((view) => view = !view)}>{view ? 'CREATE' : \"VIEW\"}</button>\n      </div>\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}